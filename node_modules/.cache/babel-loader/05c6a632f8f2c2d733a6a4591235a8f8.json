{"ast":null,"code":"var _jsxFileName = \"/home/pocho/Documents/U/2020-1/TallerI/Tarea1/ricky-martin/src/App.js\";\nimport React, { Component } from 'react';\nimport Wiki from './components/Search';\nimport Response from './components/Result';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filter: '',\n      episodes: [],\n      characters: [],\n      page: '1',\n      max_page: ''\n    };\n\n    this.scroll = () => {\n      const element = document.querySelector('.jumbotron');\n      element.scrollIntoView('auto', 'start');\n    };\n\n    this.nextPage = () => {\n      // read actual state of the page\n      let page = this.state.page; // new page ++, no puede pasar si esta en la ultima pagina\n\n      if (page == this.state.max_page) return null;\n      page++; // refresh state\n\n      this.setState({\n        page\n      }, () => {\n        this.apiRequest();\n        this.scroll();\n      });\n    };\n\n    this.previewPage = () => {\n      // read actual state of the page\n      let page = this.state.page; // new page --, no puede retroceder estando en la primera pagina\n\n      if (page == 1) return null;\n      page--; // refresh state\n\n      this.setState({\n        page\n      }, () => {\n        this.apiRequest();\n        this.scroll();\n      });\n    };\n\n    this.apiRequest = () => {\n      //\"https://rickandmortyapi.com/api/{}\" -> sample request\n      const filter = this.state.filter;\n      const page = this.state.page;\n      const url = `https://rickandmortyapi.com/api/${filter}?page=${page}`; // console.log(url);\n\n      fetch(url).then(response => response.json()).then(result => this.setState({\n        characters: result.results,\n        max_page: result.info.pages\n      }));\n    };\n\n    this.searchData = filter => {\n      this.setState({\n        filter\n      }, () => {\n        this.apiRequest();\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Rick and Morty Wiki\"), /*#__PURE__*/React.createElement(Wiki, {\n      searchData: this.searchData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Response, {\n      characters: this.state.characters,\n      nextPage: this.nextPage,\n      previewPage: this.previewPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/pocho/Documents/U/2020-1/TallerI/Tarea1/ricky-martin/src/App.js"],"names":["React","Component","Wiki","Response","App","state","filter","episodes","characters","page","max_page","scroll","element","document","querySelector","scrollIntoView","nextPage","setState","apiRequest","previewPage","url","fetch","then","response","json","result","results","info","pages","searchData","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Wiki from './components/Search';\nimport Response from './components/Result';\n\nclass App extends Component {\n\n  state = {\n    filter : '',\n    episodes : [],\n    characters : [],\n    page : '1',\n    max_page : ''\n  }\n\n  scroll = () => {\n    const element = document.querySelector('.jumbotron');\n    element.scrollIntoView('auto', 'start');\n  }\n\n  nextPage = () => {\n    // read actual state of the page\n    let page = this.state.page;\n    // new page ++, no puede pasar si esta en la ultima pagina\n    if(page == this.state.max_page) return null;\n    page ++;\n    // refresh state\n    this.setState({\n      page\n    }, () => {\n      this.apiRequest()\n      this.scroll()\n    });\n  }\n\n  previewPage = () => {\n    // read actual state of the page\n    let page = this.state.page;\n    // new page --, no puede retroceder estando en la primera pagina\n    if(page == 1) return null;\n    page --;\n    // refresh state\n    this.setState({\n      page\n    }, () => {\n      this.apiRequest()\n      this.scroll()\n    });\n  }\n\n  apiRequest = () => {\n    //\"https://rickandmortyapi.com/api/{}\" -> sample request\n    const filter = this.state.filter;\n    const page = this.state.page;\n    const url = `https://rickandmortyapi.com/api/${filter}?page=${page}`;\n\n    // console.log(url);\n\n    fetch(url)\n      .then(response => response.json())\n      .then(result => this.setState({ characters : result.results , max_page : result.info.pages }) )\n  }\n\n  searchData =  (filter) => {\n    this.setState({\n      filter\n    }, () =>{\n      this.apiRequest();\n    })\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n\n        <div className=\"jumbotron\">\n          <p className=\"lead text-center\">Rick and Morty Wiki</p>\n          <Wiki\n            searchData={this.searchData}\n          />\n        </div>\n\n        <div className=\"row justify-content-center\">\n          <Response\n            characters ={this.state.characters}\n            nextPage={this.nextPage}\n            previewPage={this.previewPage}\n          />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
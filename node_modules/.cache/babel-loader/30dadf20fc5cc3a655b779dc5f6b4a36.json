{"ast":null,"code":"var _jsxFileName = \"/home/pocho/Documents/U/2020-1/TallerI/Tarea1/ricky-martin/src/App.js\";\nimport React, { Component } from 'react';\nimport Wiki from './components/Search';\nimport Response from './components/Result';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filter: '',\n      // word to search\n      episodes: [],\n      characters: [],\n      locations: [],\n      page: '1',\n      // first page\n      max_page: '' // n° pages request\n\n    };\n\n    this.scroll = () => {\n      const element = document.querySelector('.jumbotron');\n      element.scrollIntoView('instant', 'start');\n    };\n\n    this.nextPage = () => {\n      // read actual state of the page\n      let page = this.state.page; // new page ++, no puede pasar si esta en la ultima pagina\n\n      if (page == this.state.max_page) return null;\n      page++; // refresh state\n\n      this.setState({\n        page\n      }, () => {\n        this.apiRequest();\n        this.scroll();\n      });\n    };\n\n    this.previewPage = () => {\n      // read actual state of the page\n      let page = this.state.page; // new page --, no puede retroceder estando en la primera pagina\n\n      if (page == 1) return null;\n      page--; // refresh state\n\n      this.setState({\n        page\n      }, () => {\n        this.apiRequest();\n        this.scroll();\n      });\n    };\n\n    this.searchData = (filter, page) => {\n      this.setState({\n        filter,\n        page\n      }, () => {\n        this.apiRequest();\n      });\n    };\n\n    this.apiRequest = () => {\n      //\"https://rickandmortyapi.com/api/{}\" -> sample request\n      const filter = this.state.filter;\n      const page = this.state.page; // if(filter != \"character\") return null;\n\n      const url = `https://rickandmortyapi.com/api/location/?name=${filter}`; // console.log(url);\n\n      fetch(url) // .then(response => response.json())       \n      .then(response => {\n        if (!response.ok) throw new Error(response.status);else return response.json();\n      }).then(result => this.setState({\n        locations: result.results,\n        max_page: result.info.pages\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"Rick and Morty Wiki\"), /*#__PURE__*/React.createElement(Wiki, {\n      searchData: this.searchData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Response, {\n      locations: this.state.locations,\n      nextPage: this.nextPage,\n      previewPage: this.previewPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/pocho/Documents/U/2020-1/TallerI/Tarea1/ricky-martin/src/App.js"],"names":["React","Component","Wiki","Response","App","state","filter","episodes","characters","locations","page","max_page","scroll","element","document","querySelector","scrollIntoView","nextPage","setState","apiRequest","previewPage","searchData","url","fetch","then","response","ok","Error","status","json","result","results","info","pages","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Wiki from './components/Search';\nimport Response from './components/Result';\n\nclass App extends Component {\n\n  state = {\n    filter : '', // word to search\n    episodes : [],\n    characters : [],\n    locations : [],\n    page : '1', // first page\n    max_page : '' // n° pages request\n  }\n\n  scroll = () => {\n    const element = document.querySelector('.jumbotron');\n    element.scrollIntoView('instant', 'start');\n  }\n\n  nextPage = () => {\n    // read actual state of the page\n    let page = this.state.page;\n    // new page ++, no puede pasar si esta en la ultima pagina\n    if(page == this.state.max_page) return null;\n    page ++;\n    // refresh state\n    this.setState({\n      page\n    }, () => {\n      this.apiRequest()\n      this.scroll()\n    });\n  }\n\n  previewPage = () => {\n    // read actual state of the page\n    let page = this.state.page;\n    // new page --, no puede retroceder estando en la primera pagina\n    if(page == 1) return null;\n    page --;\n    // refresh state\n    this.setState({\n      page\n    }, () => {\n      this.apiRequest()\n      this.scroll()\n    });\n  }\n\n  searchData =  (filter, page) => {\n    this.setState({\n      filter,\n      page\n    }, () =>{\n      this.apiRequest();\n    })\n  }\n\n  apiRequest = () => {\n    //\"https://rickandmortyapi.com/api/{}\" -> sample request\n    const filter = this.state.filter;\n    const page = this.state.page;\n    // if(filter != \"character\") return null;\n    const url = `https://rickandmortyapi.com/api/location/?name=${filter}`;\n\n    // console.log(url);\n\n    fetch(url)\n      // .then(response => response.json())       \n      .then((response) => {\n        if(!response.ok) throw new Error(response.status);\n        else return response.json();\n      })    \n      .then(result => this.setState({ locations : result.results , max_page : result.info.pages }) )\n  }\n\n  render () {\n    return (\n      <div className=\"app container\">\n\n        <div className=\"jumbotron\">\n          <p className=\"lead text-center\">Rick and Morty Wiki</p>\n          <Wiki\n            searchData={this.searchData}\n          />\n        </div>\n\n        <div className=\"row justify-content-center\">\n          <Response\n            locations ={this.state.locations}\n            nextPage={this.nextPage}\n            previewPage={this.previewPage}\n          />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
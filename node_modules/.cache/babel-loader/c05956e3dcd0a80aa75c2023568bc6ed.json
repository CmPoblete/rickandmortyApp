{"ast":null,"code":"var _jsxFileName = \"/home/pocho/Documents/U/2020-1/TallerI/Tarea1/ricky-martin/src/App.js\";\nimport React, { Component } from 'react';\nimport Wiki from './components/Search';\nimport Response from './components/Result';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filter: '',\n      episodes: [],\n      characters: [],\n      page: '1',\n      max_page: ''\n    };\n\n    this.nextPage = () => {\n      // read actual state of the page\n      let page = this.state.page; // new page ++\n\n      page++; // refresh state\n\n      this.setState({\n        page\n      });\n      console.log(page);\n    };\n\n    this.previewPage = () => {\n      // read actual state of the page\n      let page = this.state.page; // new page --\n\n      if (page == 1) return null;\n      page--; // refresh state\n\n      this.setState({\n        page\n      });\n      console.log(page);\n    };\n\n    this.apiRequest = () => {\n      //\"https://rickandmortyapi.com/api/{}\" -> sample request\n      const filter = this.state.filter;\n      const page = this.state.page;\n      const url = `https://rickandmortyapi.com/api/${filter}`; // console.log(url);\n\n      fetch(url).then(response => response.json()).then(result => this.setState({\n        characters: result.results\n      })).then(result => this.setState({\n        max_page: result.info.pages\n      }));\n    };\n\n    this.searchData = filter => {\n      this.setState({\n        filter\n      }, () => {\n        this.apiRequest();\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Rick and Morty Wiki\"), /*#__PURE__*/React.createElement(Wiki, {\n      searchData: this.searchData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Response, {\n      characters: this.state.characters,\n      nextPage: this.nextPage,\n      previewPage: this.previewPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/pocho/Documents/U/2020-1/TallerI/Tarea1/ricky-martin/src/App.js"],"names":["React","Component","Wiki","Response","App","state","filter","episodes","characters","page","max_page","nextPage","setState","console","log","previewPage","apiRequest","url","fetch","then","response","json","result","results","info","pages","searchData","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BI,KAF0B,GAElB;AACNC,MAAAA,MAAM,EAAG,EADH;AAENC,MAAAA,QAAQ,EAAG,EAFL;AAGNC,MAAAA,UAAU,EAAG,EAHP;AAINC,MAAAA,IAAI,EAAG,GAJD;AAKNC,MAAAA,QAAQ,EAAG;AALL,KAFkB;;AAAA,SAU1BC,QAV0B,GAUf,MAAM;AACf;AACA,UAAIF,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAtB,CAFe,CAIf;;AACAA,MAAAA,IAAI,GALW,CAOf;;AACA,WAAKG,QAAL,CAAc;AACZH,QAAAA;AADY,OAAd;AAGAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACD,KAtByB;;AAAA,SAwB1BM,WAxB0B,GAwBZ,MAAM;AAClB;AACA,UAAIN,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAtB,CAFkB,CAIlB;;AACA,UAAGA,IAAI,IAAI,CAAX,EAAc,OAAO,IAAP;AAEdA,MAAAA,IAAI,GAPc,CASlB;;AACA,WAAKG,QAAL,CAAc;AACZH,QAAAA;AADY,OAAd;AAGAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACD,KAtCyB;;AAAA,SAuC1BO,UAvC0B,GAuCb,MAAM;AACjB;AACA,YAAMV,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAA1B;AACA,YAAMG,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAxB;AACA,YAAMQ,GAAG,GAAI,mCAAkCX,MAAO,EAAtD,CAJiB,CAMjB;;AAEAY,MAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAI,KAAKV,QAAL,CAAc;AAAEJ,QAAAA,UAAU,EAAGc,MAAM,CAACC;AAAtB,OAAd,CAFlB,EAIGJ,IAJH,CAIQG,MAAM,IAAI,KAAKV,QAAL,CAAc;AAAEF,QAAAA,QAAQ,EAAGY,MAAM,CAACE,IAAP,CAAYC;AAAzB,OAAd,CAJlB;AAKD,KApDyB;;AAAA,SAsD1BC,UAtD0B,GAsDXpB,MAAD,IAAY;AACxB,WAAKM,QAAL,CAAc;AACZN,QAAAA;AADY,OAAd,EAEG,MAAK;AACN,aAAKU,UAAL;AACD,OAJD;AAKD,KA5DyB;AAAA;;AA8D1BW,EAAAA,MAAM,GAAI;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE,oBAAC,IAAD;AACE,MAAA,UAAU,EAAE,KAAKD,UADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,eASE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,UAAU,EAAG,KAAKrB,KAAL,CAAWG,UAD1B;AAEE,MAAA,QAAQ,EAAE,KAAKG,QAFjB;AAGE,MAAA,WAAW,EAAE,KAAKI,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF;AAoBD;;AAnFyB;;AAsF5B,eAAeX,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Wiki from './components/Search';\nimport Response from './components/Result';\n\nclass App extends Component {\n\n  state = {\n    filter : '',\n    episodes : [],\n    characters : [],\n    page : '1',\n    max_page : ''\n  }\n\n  nextPage = () => {\n    // read actual state of the page\n    let page = this.state.page;\n\n    // new page ++\n    page ++;\n\n    // refresh state\n    this.setState({\n      page\n    });\n    console.log(page);\n  }\n\n  previewPage = () => {\n    // read actual state of the page\n    let page = this.state.page;\n\n    // new page --\n    if(page == 1) return null;\n\n    page --;\n\n    // refresh state\n    this.setState({\n      page\n    });\n    console.log(page);\n  }\n  apiRequest = () => {\n    //\"https://rickandmortyapi.com/api/{}\" -> sample request\n    const filter = this.state.filter;\n    const page = this.state.page;\n    const url = `https://rickandmortyapi.com/api/${filter}`;\n\n    // console.log(url);\n\n    fetch(url)\n      .then(response => response.json())\n      .then(result => this.setState({ characters : result.results }) )\n\n      .then(result => this.setState({ max_page : result.info.pages }))\n  }\n\n  searchData =  (filter) => {\n    this.setState({\n      filter\n    }, () =>{\n      this.apiRequest();\n    })\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n\n        <div className=\"jumbotron\">\n          <p className=\"lead text-center\">Rick and Morty Wiki</p>\n          <Wiki\n            searchData={this.searchData}\n          />\n        </div>\n\n        <div className=\"row justify-content-center\">\n          <Response\n            characters ={this.state.characters}\n            nextPage={this.nextPage}\n            previewPage={this.previewPage}\n          />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}